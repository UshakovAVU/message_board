""""
Django settings for board_project project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from django.dispatch import Signal

# Определяем сигналы
response_created = Signal()
response_accepted = Signal()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
DATA_DIR = str(BASE_DIR / 'data')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^b48k3u1s728@-1*d8g26_!7*c%ucz$pf9v4r@5s2jx$$53hny'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
INTERNAL_IPS = [
    '127.0.0.1',
]

ALLOWED_HOSTS = ['messageboard-topotun77.amvera.io', '127.0.0.1']
CSRF_TRUSTED_ORIGINS = ['https://messageboard-topotun77.amvera.io']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'board',  # Убедитесь, что здесь указано правильное название вашего приложения
    'django_celery_beat',
    'django_celery_results',
    'django_extensions',  # Оставляем только здесь
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'board_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'board.user_preferences.pref',
            ],
        },
    },
]

WSGI_APPLICATION = 'board_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(DATA_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Настройки email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'  # или другой SMTP-сервер
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'Ushakov29@yandex.ru'  # или ваш email
EMAIL_HOST_PASSWORD = 'QaZ28311974WsX'  # или пароль
DEFAULT_FROM_EMAIL = 'no-reply@yourdomain.com'  # адрес отправителя по умолчанию
EMAIL_SUBJECT_PREFIX = '[Message Board] '  # префикс для темы писем

# Настройки Celery с использованием Redis
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Брокер сообщений
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'  # Хранение результатов выполнения задач

# Настройки сериализации
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# Настройки надежности
CELERY_TASK_TIME_LIMIT = 300  # Таймаут задачи в секундах (5 минут)
CELERY_TASK_SOFT_TIME_LIMIT = 240  # Мягкий таймаут (4 минуты)
CELERY_ENABLE_UTC = True  # Использовать UTC время
CELERY_TIMEZONE = 'Europe/Moscow'  # Часовой пояс

# Настройки очереди
CELERY_TASK_DEFAULT_QUEUE = 'default'
CELERY_QUEUES = {
    'default': {
        'exchange': 'default',
        'routing_key': 'default'
    },
    'high_priority': {
        'exchange': 'high_priority',
        'routing_key': 'high_priority'
    },
    'low_priority': {
        'exchange': 'low_priority',
        'routing_key': 'low_priority'
    }
}

# Настройки мониторинга
CELERY_TRACK_STARTED = True
CELERY_SEND_TASK_SENT_EVENT = True

# Настройки ошибок
CELERY_IGNORE_RESULT = False
CELERY_STORE_ERRORS_EVEN_IF_NOT_TRACKED = True

# Настройки retry
CELERY_TASK_DEFAULT_RETRY_DELAY = 30  # Задержка перед повторной попыткой
CELERY_TASK_MAX_RETRIES = 3  # Максимальное число попыток

# Настройки консьюмеров
CELERY_WORKER_CONCURRENCY = 4  # Количество рабочих процессов
CELERY_WORKER_MAX_TASKS_PER_CHILD = 100  # Перезапуск после 100 задач
CELERY_WORKER_HIJACK_ROOT_LOGGER = False  # Не перехватывать корневой логгер

# Дополнительные настройки Celery для надежности
CELERY_BEAT_SCHEDULE = {}  # Расписание задач (можно добавить позже)

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = BASE_DIR / 'staticfiles'

CMS_COLOR_SCHEME = "auto"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = '/board'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(DATA_DIR, 'media')

PAGE_DEFAULT = 10

# Определяем базовую директорию проекта
BASE_DIR = Path(__file__).resolve().parent.parent

# Создаем директорию для логов, если её не существует
LOGS_DIR = BASE_DIR / 'logs'
LOGS_DIR.mkdir(parents=True, exist_ok=True)

# Логирование
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOGS_DIR / 'django.log',  # Используем Path
            'formatter': 'verbose'
        },
        'celery_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOGS_DIR / 'celery.log',  # Используем Path
            'formatter': 'verbose'
        },
        'email_handler': {  # Новый хендлер для логирования email
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': LOGS_DIR / 'email.log',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'WARNING'),
            'propagate': False,
        },
        'celery': {
            'handlers': ['console', 'celery_file'],
            'level': 'INFO',
            'propagate': False,
        },
        'board': {  # Логгер для вашего приложения
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django.mail': {  # Логгер для email
            'handlers': ['console', 'email_handler'],
            'level': 'INFO',
            'propagate': False,
        }
    },
}

# Настройки для деплоя
# ALLOWED_HOSTS можно расширить для продакшена
# SECRET_KEY должен быть установлен из окружения в продакшене

# Настройки для отладки
if DEBUG:
    INSTALLED_APPS += [
        # Для дополнительных утилит разработки
    ]

    # Добавляем IP для отладки
    INTERNAL_IPS += [
        '10.0.2.2',  # Пример для Vagrant
        '10.0.3.2',  # Пример для VirtualBox
    ]

# Настройки для производительности
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake'
    }
}

# Настройки для безопасности
SECURE_SSL_REDIRECT = False  # Включить в продакшене
SECURE_HSTS_SECONDS = 3600   # Включить в продакшене
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True